########### HTML ROUGH CODE FOR THE CALCULATOR FILE ###########
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="calculator.css">
    <title>Scientific Calculator - By RITANKAR SAHA</title>
</head>

<body>
    <div class="container">
        <div class="calculator">
            <input type="text" id="screen" placeholder="0" />
            <div>

                <button onclick="sin()" class="trigo"> sin x </button>
                <button onclick="cos()" class="trigo"> cos x </button>
                <button onclick="tan()" class="trigo"> tan x </button>
                <button onclick="degrees_to_radians ()" class="operator"> rad </button>
                <button onclick="reverse()" class="operator"> 1/x </button>
                <button onclick="toDegrees ()" class="operator" style="width: 63px;"> deg </button>
                <button onclick="check()" class="operator"> +/- </button>
            </div>
            <div>
                <button onclick="sinInverse()" class="trigo" style="width: auto;">sin<span
                        style="position: relative; bottom: .4em; right: .1em;">-1</span> x</button>
                <button onclick="log()" class="operator"> log </button>
                <button onclick="findNthRoot()" class="operator"><span
                        style="position: relative; bottom: .4em; right: .1em;">n</span>√</button>
                <button class="button operator"> ( </button>
                <button class="button operator"> ) </button>
                <button onclick="mod()" class="operator"> |x| </button>
                <button onclick="nthPower()" class="operator"> x <span
                        style="position: relative; bottom: .4em; right: .1em;">n</span> </button>
            </div>
            <div>
                <button onclick="cosInverse()" class="trigo" style="width: auto;">cos<span
                        style="position: relative; bottom: .4em; right: .1em;">-1</span> x</button>
                <button onclick="fact()" class="operator"> x! </button>
                <button id="ac" onclick="allclear()" class="specialkey"> AC </button>
                <button id="ce" onclick="backspc()" class="specialkey"> DEL </button>
                <button class="button operator"> % </button>
                <button onclick="cosec()" class="trigo"> csc x </button>
                <button class="button operator"> ÷ </button>
            </div>
            <div>
                <button onclick="tanInverse()" class="trigo" style="width: auto;">tan<span
                        style="position: relative; bottom: .4em; right: .1em;">-1</span> x</button>
                <button class="operator" onclick="pow()">x <span
                        style="position: relative; bottom: .4em; right: .1em;">2</span>
                </button>
                <button class="button"> 7 </button>
                <button class="button"> 8 </button>
                <button class="button"> 9 </button>
                <button onclick="sec()" class="trigo"> sec x </button>
                <button class="button operator"> x </button>
            </div>
            <div>
                <button onclick="cosecInverse()" class="trigo" style="width: auto;">csc<span
                        style="position: relative; bottom: .4em; right: .1em;">-1</span> x</button>
                <button onclick="sqrt()" class="operator"> √ </button>
                <button class="button"> 4 </button>
                <button class="button"> 5</button>
                <button class="button"> 6 </button>
                <button onclick="cot()" class="trigo"> cot x </button>
                <button class="button operator">-</button>
            </div>
            <div>
                <button onclick="secInverse()" class="trigo" style="width: auto;">sec<span
                        style="position: relative; bottom: .4em; right: .1em;">-1</span> x</button>
                <button onclick="pi()" class="operator"> π </button>
                <button class="button"> 1 </button>
                <button class="button"> 2 </button>
                <button class="button"> 3 </button>
                <button onclick="permutation()" class="stat"> per </button>
                <button class="button operator">+</button>
            </div>
            <div>
                <button onclick="cotInverse()" class="trigo" style="width: auto;">cot <span
                        style="position: relative; bottom: .4em; right: .1em;">-1</span> x</button>
                <button onclick="e()" class="operator"> e </button>
                <button class="button"> 00 </button>
                <button class="button"> 0 </button>
                <button class="button"> . </button>
                <button onclick="combination()" class="stat"> comb </button>
                <button class="equalBtn" id="eval" onclick="equality()">=</button>
            </div>
        </div>
    </div>

    <script src="calculator.js"></script>
</body>

</html>






########### CALCULATOR CSS FILE #############
@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@500&display=swap');

*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Poppins', sans-serif;
}

body{
    width: 100%;
    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    background: linear-gradient(45deg, #6a5e5e, #0c1118);
}

.calculator{
    
    border: 1px solid #717377;
    padding: 20px;
    border-radius: 16px;
    background: rgba(22, 23, 23, 0.466);
    box-shadow: 0px 3px 15px rgba(120, 156, 228, 0.948);

}

input{
    width: 535px;
    border: none;
    padding: 24px;
    margin: 10px;
    background: transparent;
    box-shadow: 0px 3px 15px rgba(67, 128, 120, 0.87);
    font-size: 40px;
    text-align: right;
    cursor: pointer;
    color: #ffffff;
}

input::placeholder{
    color: #ffffff;
}

button{
    border: none;
    width: 55px;
    height: 50px;
    margin: 10px;
    border-radius: 50%;
    background: transparent;
    color: #ffffff;
    font-size: 20px;
    box-shadow: -8px -8px 15px rgba(255, 255, 255, 0.173);
    cursor: pointer;
}

.equalBtn{
    background-color: #fb7c14;
}

.operator{
    color: #6dee0a;
}

.specialkey{
    color:rgba(0, 255, 255, 0.662);
}
.trigo{
    color: rgb(36, 93, 198);
}
.stat{
    color: crimson;
}







######### CALCULATOR ROUGH JS FILE ########
var screen=document.querySelector('#screen');
var btn=document.querySelectorAll('.button');


for(item of btn)
{
    item.addEventListener('click',(e)=>{
        btntext=e.target.innerText;

        if(btntext =='x')
        {
            btntext= '*';
        }

        if(btntext=='÷')
        {
            btntext='/';
        }
        screen.value+=btntext;
    });
}
function check()
{
  if (screen.value < 0 )
  {
    screen.value = Math.abs(screen.value);
  }
  else if(screen.value > 0)
  {
    screen.value = 0 - screen.value;
  }
  else
  {
    screen.value = screen.value;
  }
}
function sin()
{
    screen.value=Math.sin(screen.value);
}

function sinInverse() {
  var inputValue = parseFloat(screen.value);
  
  if (isNaN(inputValue)) {
    alert("Invalid input. Please enter a valid number.");
    return;
  }

  if (inputValue < -1 || inputValue > 1) {
    alert("Input value should be between -1 and 1 (inclusive).");
    return;
  }

  var result = Math.asin(inputValue) * (180 / Math.PI);
  screen.value = result;
}

function cosec()
{
    screen.value=1/(Math.sin(screen.value));
}
function cosecInverse() {
  var inputValue = parseFloat(screen.value);
  
  if (isNaN(inputValue) || inputValue === 0) {
    alert("Invalid input. Please enter a non-zero valid number.");
    return;
  }

  var result = Math.asin(1 / inputValue) * (180 / Math.PI);
  screen.value = result;
}
function cos()
{
    screen.value=Math.cos(screen.value);
}
function cosInverse() {
  var inputValue = parseFloat(screen.value);
  
  if (isNaN(inputValue)) {
    alert("Invalid input. Please enter a valid number.");
    return;
  }

  if (inputValue < -1 || inputValue > 1) {
    alert("Input value should be between -1 and 1 (inclusive).");
    return;
  }

  var result = Math.acos(inputValue) * (180 / Math.PI);
  screen.value = result;
}
function sec()
{
    screen.value=1/(Math.cos(screen.value));
}
function secInverse() {
  var inputValue = parseFloat(screen.value);
  
  if (isNaN(inputValue) || inputValue === 0) {
    alert("Invalid input. Please enter a non-zero valid number.");
    return;
  }

  var result = Math.acos(1 / inputValue) * (180 / Math.PI);
  screen.value = result;
}
function tan()
{
    screen.value=Math.tan(screen.value);
}
function tanInverse() {
  var inputValue = parseFloat(screen.value);
  
  if (isNaN(inputValue)) {
    alert("Invalid input. Please enter a valid number.");
    return;
  }

  var result = Math.atan(inputValue) * (180 / Math.PI);
  screen.value = result;
}
function cot()
{
    screen.value=1/(Math.tan(screen.value));
}
function cotInverse() {
  var inputValue = parseFloat(screen.value);
  
  if (isNaN(inputValue) || inputValue === 0) {
    alert("Invalid input. Please enter a non-zero valid number.");
    return;
  }

  var result = Math.atan(1 / inputValue) * (180 / Math.PI);
  screen.value = result;
}
function reverse()
{
    screen.value=1/screen.value;
}
function pow()
{
    screen.value=Math.pow(screen.value,2);
}

function sqrt()
{
    screen.value=Math.sqrt(screen.value);
}
function mod()
{
  screen.value=Math.abs(screen.value);
}
function log()
{
    screen.value=Math.log(screen.value);
}

function pi()
{
    screen.value= 3.14159265359;
}

function e()
{
    screen.value=2.71828182846;
}

function fact()
{
    var i, num, f;
    f=1
    num=screen.value;
    for(i=1; i<=num; i++)
    {
        f=f*i;
    }

    i=i-1;

    screen.value=f;
}
function factnum(num) {
    if (num === 0 || num === 1) {
      return 1;
    } else {
      return num * factnum(num - 1);
    }
  }
  
  function permutation() {
    var n = parseInt(prompt("Please enter the value of n"));
    var r = parseInt(prompt("Please enter the value of r"));
  
    if (isNaN(n) || isNaN(r)) {
      alert("Please enter valid numbers.");
      return;
    }
  
    var nfact = factnum(n);
    var nrfact = factnum(n - r);
    var result = nfact / nrfact;
    screen.value = result;
  }
  
  function combination() {
    var n = parseInt(prompt("Please enter the value of n"));
    var r = parseInt(prompt("Please enter the value of r"));
  
    if (isNaN(n) || isNaN(r)) {
      alert("Please enter valid numbers.");
      return;
    }
  
    var nfact = factnum(n);
    var rfact = factnum(r);
    var nrfact = factnum(n - r);
    var result = nfact / (rfact * nrfact);
    screen.value = result/2;
  }
  
function degrees_to_radians ()
 { 
  screen.value = screen.value * (Math.PI / 180); 
}
function toDegrees () 
{ 
  screen.value = screen.value  * (180 / Math.PI);
}
function findNthRoot() {
  var nthRootValue = parseFloat(screen.value);
  var n = parseFloat(prompt("Enter the value of n (the root you want to find):"));

  if (isNaN(nthRootValue) || isNaN(n)) {
    alert("Invalid input. Please enter valid numbers.");
    return;
  }

  if (n === 0) {
    alert("The root cannot be 0.");
    return;
  }

  var nthRoot = Math.pow(nthRootValue, 1 / n);
  screen.value = nthRoot;
}
function nthPower() {
  var base = parseFloat(screen.value);
  var n = parseFloat(prompt("Enter the value of n (the exponent):"));

  if (isNaN(base) || isNaN(n)) {
      alert("Invalid input. Please enter valid numbers.");
      return;
  }

  var result = Math.pow(base, n);
  screen.value = result;
}
function backspc()
{
    screen.value=screen.value.substr(0,screen.value.length-1);
}
function allclear()
{
  screen.value='';
}
function equality()
{
  screen.value=eval(screen.value);
}